\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2-1}{\ignorespaces Illustration of the data matrix, $\mathbf {P}$, by \citet {Groenestijn_2010}. \textit {Left:} The signal generated at the source position, $x_s$, is measured at receiver position, $x_r$, as a function of time, $t$. Thus, the discretized data is saved in a cube, $\mathbf {p}(t,x_r,x_s)$. \textit {Right:} The cube on the right equals the left cube after a Fourier transform with respect to time. Each frequency slice of the right cube represents the data matrix, $\mathbf {P}$.\relax }}{6}{figure.caption.9}
\contentsline {figure}{\numberline {2-2}{\ignorespaces Illustration of the data matrix, $\mathbf {P}$, by \cite {Mahdad-Deblending-Method}. The dotted lines indicate directions of common gathers.\relax }}{6}{figure.caption.10}
\contentsline {figure}{\numberline {2-3}{\ignorespaces A conventional source matrix, $\mathbf {S}$, is transformed to a blended source matrix, $\mathbf {S}_{bl}$, by applying the blending matrix, $\mathbf {\Gamma }$. Each star represents one shot, and the gray scale of the stars represents the relative firing time.\relax }}{7}{figure.caption.11}
\contentsline {figure}{\numberline {2-4}{\ignorespaces Blended shot gather of two shots. The right shot is fired \SI {120}{\milli \second } after the left shot.\relax }}{8}{figure.caption.12}
\contentsline {figure}{\numberline {2-5}{\ignorespaces Flowchart belonging to the deblending method of \citet {Mahdad-Deblending-Method}.\relax }}{9}{figure.caption.13}
\contentsline {figure}{\numberline {2-6}{\ignorespaces Pseudo-deblended data, $\mathbf {P}_{ps}$, sorted in common shot gathers (a,b) and in a common receiver gather (c). The pseudo-deblended data of the right shot (a) and the left shot (b,c) were shifted by different time delays. The overlapping sources map in the pseudo-deblended shot gathers as coherent events, while they map as incoherent spikes in the pseudo-deblended receiver gather.\relax }}{10}{figure.caption.15}
\contentsline {figure}{\numberline {2-7}{\ignorespaces (a) Pseudo-deblended receiver gather. The subfigures (b)-(f) illustrate each step of the deblending algorithm. For better visibility examples from the $5^{th}$ iteration are chosen. (b) $f$-$k$-spectrum before (top) and after (bottom) $f$-$k$-filtering, (c) $f$-$k$-filtered common receiver gather, (d) after thresholding, (e) estimated blending noise, (f) estimated data.\relax }}{11}{figure.caption.16}
\contentsline {figure}{\numberline {2-8}{\ignorespaces \relax }}{12}{figure.caption.18}
\contentsline {figure}{\numberline {2-9}{\ignorespaces Common receiver gather of the estimated data after 1, 5, 10, 15, 20 and 25 iterations.\relax }}{14}{figure.caption.22}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3-1}{\ignorespaces Illustration of the matrix product, $\mathbf {\Gamma \Gamma }^H$. In this notation $\Delta t_k$ refers to the phase shift of the shot $k$, and $\Delta t_{kl}$ refers to the phase shift between the shots $k$ and $l$, $\Delta t_{kl} = \Delta t_k - \Delta t_l$.\relax }}{16}{figure.caption.23}
\contentsline {figure}{\numberline {3-2}{\ignorespaces Comparison of the pseudo-deblended receiver gather for (a) constant firing time delays of \SI {100}{\milli \second }, and (b) random firing time delays between \SI {0}{\milli \second } and \SI {100}{\milli \second }. (c) and (d) show the $f$-$k$-spectra of (a) and (b) respectively.\relax }}{17}{figure.caption.25}
\contentsline {figure}{\numberline {3-3}{\ignorespaces The blending matrix, $\mathbf {\Gamma }$, is obtained by interchanging the $3^{rd}$ and $4^{th}$ row of the blending matrix in Figure \ref {fig:Ch-Theory-GGH}. In acquisition this is equivalent to moving shot 3 to experiment 2, and shot 4 to experiment 1. A random permutation of the rows of the blending matrix spreads the off-diagonal elements of the matrix product, $\mathbf {\Gamma \Gamma }^H$. The elements are not assembled on the sub-diagonals anymore.\relax }}{17}{figure.caption.26}
\contentsline {figure}{\numberline {3-4}{\ignorespaces (a) shows an synthetic unblended common receiver gather. The data are blended with a (b) spatially incoherent, (c) temporally incoherent, and (d) mixed incoherent blending pattern. The respective deblending results are shown in (b) to (d).\relax }}{19}{figure.caption.28}
\contentsline {figure}{\numberline {3-5}{\ignorespaces Illustration of the sub-diagonal elements in the complex number plane. The elements have unit length and variable phase. The absolute value of their sum depends on the phase coherency of the elements.\relax }}{19}{figure.caption.31}
\contentsline {figure}{\numberline {3-6}{\ignorespaces Illustration of the absolute sub-diagonal sums, $S(d,\omega )$, for the frequency slice $f=\SI {25}{\hertz }$. (a) refers to the blending matrix $\mathbf {\Gamma }_{coh}$ with coherent firing time delays. $S(d,\omega )$ is less spike-like and yields an incoherency value of $\mu _a = \SI {67}{\percent }$. (b) refers to the blending matrix $\mathbf {\Gamma }_{ran}$ with random firing time delays. $S(d,\omega )$ is close to a spike and yields an incoherency value of $\mu _b = \SI {98}{\percent }$.\relax }}{21}{figure.caption.32}
\contentsline {figure}{\numberline {3-7}{\ignorespaces Quality factor, $Q$, as a function of the incoherency, $\mu $. The deblending results with quality factors above 5 look acceptable.\relax }}{22}{figure.caption.34}
\contentsline {figure}{\numberline {3-8}{\ignorespaces The 3 suggested blending patterns are simulated with maximum firing time delays between \SI {40}{\milli \second } and \SI {400}{\milli \second }. The quality factors are computed with respect to the unblended data and illustrated as a function of the maximum firing time delay.\relax }}{23}{figure.caption.35}
\contentsline {figure}{\numberline {3-9}{\ignorespaces Deblending quality as a function of incoherency for a constant maximum firing time delay.\relax }}{24}{figure.caption.39}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4-1}{\ignorespaces Illustration of the data matrix $\mathbf {P}$ for 3D data \citep {Delphi-Format}. $y_r$ and $y_s$ represent the inline receiver and source positions. $x_r$ and $x_s$ represent the crossline receiver and source positions. Each row refers to a 3D common receiver gather and each column to a 3D common shot gather. A sub-matrix with fixed receiver and source inline positions ($y_r$, $y_s$) is equivalent to a data matrix for 2D acquisition.\relax }}{26}{figure.caption.43}
\contentsline {figure}{\numberline {4-2}{\ignorespaces (a) Common receiver gather of a 3D data set with crossline (x) and inline (y) sources. (b) Resorted data set. Individual crossline sections are plotted next to each other in 2D. For visibility both subfigures only show a reduced part of the data.\relax }}{27}{figure.caption.44}
\contentsline {figure}{\numberline {4-3}{\ignorespaces Illustration of the blending matrix, $\mathbf {\Gamma }$, for 3D acquisition. (a) At each of the $Ns_y$ inline position the crossline sources ($x$ direction) are blended. Each of these 2D blending processes is described by a 2D blending matrix, which has as many rows as there are crossline sources, $Ns_x$. (b) The 2D blending matrices are assembled in a single 3D blending matrix, $\mathbf {\Gamma }$, which has $Ns_x$ by $Ns_y$ rows.\relax }}{28}{figure.caption.47}
\contentsline {figure}{\numberline {4-4}{\ignorespaces One can design a 2D $f$-$k_x$-filter for 3D data. (a) shows a \SI {40}{\hertz } frequency slice of the $f$-$k_x$-$k_y$ spectrum, where the shite area equals 1 and the black area is 0. Note that the filter is not affecting the inline wavenumbers $k_y$. (b) illustrates the 2D $f$-$k_x$-filter sorted according to section \ref {sec:Ch-Theory-3dExtension-DataSorting}. Each cone represents a 2D $f$-$k$-filter for a single inline wavenumber.\relax }}{29}{figure.caption.48}
\contentsline {figure}{\numberline {4-5}{\ignorespaces Illustration of the 3D $f$-$k_x$-$k_y$-filter. (a) is a \SI {40}{\hertz } frequency slice of the $f$-$k_x$-$k_y$ spectrum of the data in Figure \ref {fig:Ch-Theory-Data3d_Delphi}. $k_x$ and $k_y$ refer to the crossline and inline wavenumber respectively. (b) shows the same data slice sorted in a 3D cube. The red cone represents the 3D $f$-$k_x$-$k_y$ filter mask. (c) is a \SI {40}{\hertz } frequency slice of the mask, where the white area equals 1 and the black area is 0. (d) and (e) display the $f$-$k_x$-$k_y$ data spectrum and mask sorted according to section \ref {sec:Ch-Theory-3dExtension-DataSorting}, i.e. each sub-cone refers to one inline wavenumber. Note that due to the sorting the wavenumber axis is a mix of crossline and inline wavenumbers. For this reason the wavenumber axis has no labels.\relax }}{30}{figure.caption.49}
\contentsline {figure}{\numberline {4-6}{\ignorespaces The crossline sources of the synthetic data in Figure \ref {fig:Ch-Results-Unbl-Delphi} are blended. Then, the 3D deblending algorithm is applied. In case (a) the algorithm uses a 2D $f$-$k_x$ filter. In case (b) it uses a 3D $f$-$k_x$-$k_y$ filter.\relax }}{31}{figure.caption.50}
\contentsline {figure}{\numberline {4-7}{\ignorespaces Comparison of the deblending quality with a 2D $f$-$k_x$ filter and a 3D $f$-$k_x$-$k_y$ filter. The data in Figure \ref {fig:Ch-Mahdad3d-Unbl-Delphi} are blended with varying maximum firing time delay. Then the blended data are deblended using a 2D $f$-$k_x$ filter and a 3D $f$-$k_x$-$k_y$ filter.\relax }}{32}{figure.caption.51}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5-1}{\ignorespaces Illustration of the acquisition design of the synthetic data in Figure \ref {fig:Ch-Results-Debl-Delphi}. There are 21 sources in the crossline with a spacing of \SI {12.5}{\metre }. At each inline position the crossline sources are blended in 3 experiments with 7 sources per experiment.\relax }}{34}{figure.caption.52}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
