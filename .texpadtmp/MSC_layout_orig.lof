\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2-1}{\ignorespaces Illustration of the data matrix, $\mathbf {P}$, by \citet {Groenestijn_2010}. \textit {Left:} The signal generated at the source position, $x_s$, is measured at receiver position, $x_r$, as a function of time, $t$. Thus, the discretized data is saved in a cube, $\mathbf {p}(t,x_r,x_s)$. \textit {Right:} The cube on the right equals the left cube after a Fourier transform with respect to time. Each frequency slice of the right cube represents the data matrix, $\mathbf {P}$.\relax }}{4}{figure.caption.8}
\contentsline {figure}{\numberline {2-2}{\ignorespaces Illustration of the data matrix, $\mathbf {P}$, by \cite {Mahdad-Deblending-Method}. The dotted lines indicate directions of common gathers.\relax }}{4}{figure.caption.9}
\contentsline {figure}{\numberline {2-3}{\ignorespaces A conventional source matrix, $\mathbf {S}$, is transformed to a blended source matrix, $\mathbf {S}_{bl}$, by applying the blending matrix, $\mathbf {\Gamma }$. Each star represents one shot, and the gray scale of the stars represents the relative firing time.\relax }}{5}{figure.caption.10}
\contentsline {figure}{\numberline {2-4}{\ignorespaces Blended shot gather of two shots. The right shot is fired \SI {120}{\milli \second } after the left shot.\relax }}{6}{figure.caption.11}
\contentsline {figure}{\numberline {2-5}{\ignorespaces Flowchart belonging to the deblending method of \citet {Mahdad-Deblending-Method}.\relax }}{7}{figure.caption.12}
\contentsline {figure}{\numberline {2-6}{\ignorespaces Pseudo-deblended data, $\mathbf {P}_{ps}$, sorted in common shot gathers (a,b) and in a common receiver gather (c). The pseudo-deblended data of the right shot (a) and the left shot (b,c) were shifted by different time delays. The overlapping sources map in the pseudo-deblended shot gathers as coherent events, while they map as incoherent spikes in the pseudo-deblended receiver gather.\relax }}{8}{figure.caption.13}
\contentsline {figure}{\numberline {2-7}{\ignorespaces (a) Pseudo-deblended receiver gather. The subfigures (b)-(f) illustrate each step of the deblending algorithm. For better visibility examples from the $5^{th}$ iteration are chosen. (b) $f$-$k$-spectrum before (top) and after (bottom) $f$-$k$-filtering, (c) $f$-$k$-filtered common receiver gather, (d) after thresholding, (e) estimated blending noise, (f) estimated data.\relax }}{9}{figure.caption.14}
\contentsline {figure}{\numberline {2-8}{\ignorespaces \relax }}{10}{figure.caption.16}
\contentsline {figure}{\numberline {2-9}{\ignorespaces Common receiver gather of the estimated data after 1, 5, 10, 15, 20 and 25 iterations.\relax }}{12}{figure.caption.20}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3-1}{\ignorespaces Illustration of the matrix product, $\mathbf {\Gamma \Gamma }^H$. In this notation $\Delta t_k$ refers to the phase shift of the shot $k$, and $\Delta t_{kl}$ refers to the phase shift between the shots $k$ and $l$, $\Delta t_{kl} = \Delta t_k - \Delta t_l$.\relax }}{14}{figure.caption.21}
\contentsline {figure}{\numberline {3-2}{\ignorespaces Comparison of the pseudo-deblended receiver gather for (a) constant firing time delays of \SI {100}{\milli \second }, and (b) random firing time delays between \SI {0}{\milli \second } and \SI {100}{\milli \second }. (c) and (d) show the $f$-$k$-spectra of (a) and (b) respectively.\relax }}{15}{figure.caption.23}
\contentsline {figure}{\numberline {3-3}{\ignorespaces The blending matrix, $\mathbf {\Gamma }$, is obtained by interchanging the $3^{rd}$ and $4^{th}$ row of the blending matrix in Figure \ref {fig:Ch-Theory-GGH}. In acquisition this is equivalent to moving shot 3 to experiment 2, and shot 4 to experiment 1. A random permutation of the rows of the blending matrix spreads the off-diagonal elements of the matrix product, $\mathbf {\Gamma \Gamma }^H$. The elements are not assembled on the sub-diagonals anymore.\relax }}{15}{figure.caption.24}
\contentsline {figure}{\numberline {3-4}{\ignorespaces (a) shows an synthetic unblended common receiver gather. The data are blended with a (b) spatially incoherent, (c) temporally incoherent, and (d) mixed incoherent blending pattern. The respective pseudo-deblended data (left) and deblended data (right) are shown in (b) to (d).\relax }}{17}{figure.caption.26}
\contentsline {figure}{\numberline {3-5}{\ignorespaces Illustration of the sub-diagonal elements in the complex number plane. The elements have unit length and variable phase. The absolute value of their sum depends on the phase coherency of the elements.\relax }}{18}{figure.caption.28}
\contentsline {figure}{\numberline {3-6}{\ignorespaces Illustration of the absolute sub-diagonal sums, $M(d,\omega )$, for the frequency slice $f=\SI {25}{\hertz }$. (a) refers to the blending matrix $\mathbf {\Gamma }_{coh}$ with constant firing time delays. (b) refers to the blending matrix $\mathbf {\Gamma }_{ran}$ with random firing time delays.\relax }}{19}{figure.caption.29}
\contentsline {figure}{\numberline {3-7}{\ignorespaces Deblending quality as a function of incoherency for a constant maximum firing time delay.\relax }}{20}{figure.caption.31}
\contentsline {figure}{\numberline {3-8}{\ignorespaces The 3 suggested blending patterns are simulated with maximum firing time delays between \SI {40}{\milli \second } and \SI {400}{\milli \second }. The quality factors are computed with respect to the unblended data and illustrated as a function of the maximum firing time delay.\relax }}{21}{figure.caption.32}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4-1}{\ignorespaces Illustration of the data matrix $\mathbf {P}$ for 3D data \citep {Delphi-Format}. $y_r$ and $y_s$ represent the inline receiver and shot positions. $x_r$ and $x_s$ represent the crossline receiver and shot positions. Each row refers to a 3D common receiver gather and each column to a 3D common shot gather. A sub-matrix with fixed receiver and source inline positions ($y_r$, $y_s$) is equivalent to a data matrix for 2D acquisition.\relax }}{24}{figure.caption.34}
\contentsline {figure}{\numberline {4-2}{\ignorespaces (a) 3D common receiver gather with crossline (x) and inline (y) sources (3D view). (b) Resorted data set. Individual crossline sections are plotted next to each other in 2D. For visibility both subfigures only show a reduced part of the data. This view is called 3D CRG 2D view.\relax }}{25}{figure.caption.35}
\contentsline {figure}{\numberline {4-3}{\ignorespaces Illustration of the blending matrix, $\mathbf {\Gamma }$, for 3D acquisition. (a) At each of the $Ns_y$ inline position the crossline sources ($x$ direction) are blended. Each of these 2D blending processes is described by a 2D blending matrix, which has as many rows as there are crossline sources, $Ns_x$. (b) The 2D blending matrices are assembled in a single 3D blending matrix, $\mathbf {\Gamma }$, which has $Ns_x$ by $Ns_y$ rows.\relax }}{25}{figure.caption.37}
\contentsline {figure}{\numberline {4-4}{\ignorespaces Illustration of the 3D $f$-$k_x$-$k_y$-filter. (a) is a \SI {40}{\hertz } frequency slice of the $f$-$k_x$-$k_y$ spectrum of the data in Figure \ref {fig:Ch-Theory-DataSorting}. $k_x$ and $k_y$ refer to the crossline and inline wavenumber respectively. (b) is a \SI {40}{\hertz } frequency slice of the $f$-$k_x$-$k_y$ mask, where the white area equals 1 and the black area is 0. (c) shows the \SI {40}{\hertz } frequency slice of (a) sorted in a 3D cube. The red cone represents the edge of the 3D $f$-$k_x$-$k_y$ filter mask. (d) and (e) display the $f$-$k_x$-$k_y$ data spectrum and mask sorted according to section \ref {sec:Ch-Theory-3dExtension-DataSorting}, i.e. each sub-cone refers to one inline wavenumber. Note that due to the sorting the wavenumber axis is a mix of crossline and inline wavenumbers. For this reason the wavenumber axis has no labels.\relax }}{27}{figure.caption.38}
\contentsline {figure}{\numberline {4-5}{\ignorespaces 2D $f$-$k_x$-filter for 3D data. (a) shows a \SI {40}{\hertz } frequency slice of the $f$-$k_x$-$k_y$ spectrum, where the white area equals 1 and the black area is 0. Note that the filter is not affecting the inline wavenumbers $k_y$. (b) illustrates the 2D $f$-$k_x$-filter sorted according to section \ref {sec:Ch-Theory-3dExtension-DataSorting}. Each cone represents a 2D $f$-$k$-filter for a single inline wavenumber.\relax }}{28}{figure.caption.39}
\contentsline {figure}{\numberline {4-6}{\ignorespaces (a) is a synthetic 3D common receiver gather in 2D view. The data are generated by 21 crossline shots and 51 inline shots. The shown section is a zoom on the strongest events. Figure \ref {fig:Ch-Results-Unbl-inline10} shows one crossline of the data for all times. The data are blended with a mixed incoherency blending pattern. Then, the 3D deblending algorithm is applied. (b) shows the pseudo-deblended data. In case (c) the algorithm uses a 2D $f$-$k_x$ filter. In case (d) it uses a 3D $f$-$k_x$-$k_y$ filter.\relax }}{29}{figure.caption.40}
\contentsline {figure}{\numberline {4-7}{\ignorespaces (a) - (d) show \SI {420}{\milli \second } time slices of the data in Figure \ref {fig:Ch-Mahdad3d-Deblending-2dvs3d-fk}.\relax }}{30}{figure.caption.41}
\contentsline {figure}{\numberline {4-8}{\ignorespaces Comparison of the deblending quality with a 2D $f$-$k_x$ filter and a 3D $f$-$k_x$-$k_y$ filter. The data in Figure \ref {fig:Ch-Mahdad3d-Unbl-Delphi} are blended with varying maximum firing time delay. Then the blended data are deblended using a 2D $f$-$k_x$ filter and a 3D $f$-$k_x$-$k_y$ filter.\relax }}{30}{figure.caption.42}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
