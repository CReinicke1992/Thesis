\relax 
\providecommand\hyper@newdestlabel[2]{}
\citation{Mahdad-Deblending-Method}
\citation{Mahdad-Deblending-Method}
\citation{Delphi-Format}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Crossline Deblending (3D)}{25}{chapter.4}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chap:MahdadMethod3d}{{4}{25}{Crossline Deblending (3D)}{chapter.4}{}}
\@writefile{tdo}{\contentsline {todo}{Make sure you mention the spatial incoherency for 3d blending in this chapter!}{25}{section*.38}}
\@writefile{toc}{\contentsline {section}{\numberline {4-1}Data Sorting}{25}{section.4.1}}
\newlabel{sec:Ch-Theory-3dExtension-DataSorting}{{4-1}{25}{Data Sorting}{section.4.1}{}}
\citation{Delphi-Format}
\citation{Delphi-Format}
\@writefile{lof}{\contentsline {figure}{\numberline {4-1}{\ignorespaces Illustration of the data matrix $\mathbf  {P}$ for 3D data \citep  {Delphi-Format}. $y_r$ and $y_s$ represent the inline receiver and shot positions. $x_r$ and $x_s$ represent the crossline receiver and shot positions. Each row refers to a 3D common receiver gather and each column to a 3D common shot gather. A sub-matrix with fixed receiver and source inline positions ($y_r$, $y_s$) is equivalent to a data matrix for 2D acquisition.\relax }}{26}{figure.caption.40}}
\newlabel{fig:Ch-Theory-DelphiFormat}{{4-1}{26}{Illustration of the data matrix $\mathbf {P}$ for 3D data \citep {Delphi-Format}. $y_r$ and $y_s$ represent the inline receiver and shot positions. $x_r$ and $x_s$ represent the crossline receiver and shot positions. Each row refers to a 3D common receiver gather and each column to a 3D common shot gather. A sub-matrix with fixed receiver and source inline positions ($y_r$, $y_s$) is equivalent to a data matrix for 2D acquisition.\relax }{figure.caption.40}{}}
\@writefile{tdo}{\contentsline {todo}{Keep this sentence for later: This framework allows to blend any source combination independent of the cross- and inline positions of the involved sources.}{26}{section*.43}}
\newlabel{fig:Ch-Theory-Data3d}{{4-2a}{27}{\relax }{figure.caption.41}{}}
\newlabel{sub@fig:Ch-Theory-Data3d}{{a}{27}{\relax }{figure.caption.41}{}}
\newlabel{fig:Ch-Theory-Data3d_Delphi}{{4-2b}{27}{\relax }{figure.caption.41}{}}
\newlabel{sub@fig:Ch-Theory-Data3d_Delphi}{{b}{27}{\relax }{figure.caption.41}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4-2}{\ignorespaces (a) 3D common receiver gather with crossline (x) and inline (y) sources (3D view). (b) Resorted data set. Individual crossline sections are plotted next to each other in 2D. For visibility both subfigures only show a reduced part of the data. This view is called 3D CRG 2D view.\relax }}{27}{figure.caption.41}}
\newlabel{fig:Ch-Theory-DataSorting}{{4-2}{27}{(a) 3D common receiver gather with crossline (x) and inline (y) sources (3D view). (b) Resorted data set. Individual crossline sections are plotted next to each other in 2D. For visibility both subfigures only show a reduced part of the data. This view is called 3D CRG 2D view.\relax }{figure.caption.41}{}}
\newlabel{fig:Ch-Theory-3D-BlendedAcquisition}{{4-3a}{28}{\relax }{figure.caption.44}{}}
\newlabel{sub@fig:Ch-Theory-3D-BlendedAcquisition}{{a}{28}{\relax }{figure.caption.44}{}}
\newlabel{fig:Ch-Theory-3D-BlendingMatrix}{{4-3b}{28}{\relax }{figure.caption.44}{}}
\newlabel{sub@fig:Ch-Theory-3D-BlendingMatrix}{{b}{28}{\relax }{figure.caption.44}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4-3}{\ignorespaces Illustration of the blending matrix, $\mathbf  {\Gamma }$, for 3D acquisition. (a) At each of the $Ns_y$ inline position the crossline sources ($x$ direction) are blended. Each of these 2D blending processes is described by a 2D blending matrix, which has as many rows as there are crossline sources, $Ns_x$. (b) The 2D blending matrices are assembled in a single 3D blending matrix, $\mathbf  {\Gamma }$, which has $Ns_x$ by $Ns_y$ rows.\relax }}{28}{figure.caption.44}}
\newlabel{fig:Ch-Theory-3D-BlendingMatrix-Design}{{4-3}{28}{Illustration of the blending matrix, $\mathbf {\Gamma }$, for 3D acquisition. (a) At each of the $Ns_y$ inline position the crossline sources ($x$ direction) are blended. Each of these 2D blending processes is described by a 2D blending matrix, which has as many rows as there are crossline sources, $Ns_x$. (b) The 2D blending matrices are assembled in a single 3D blending matrix, $\mathbf {\Gamma }$, which has $Ns_x$ by $Ns_y$ rows.\relax }{figure.caption.44}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4-2}3D f-k-k Filter}{28}{section.4.2}}
\newlabel{sec:Ch-Theory-3dExtension-FKK}{{4-2}{28}{3D f-k-k Filter}{section.4.2}{}}
\newlabel{eq_Ch-Theory-MaxWavenmber-Repetition}{{4-1}{28}{3D f-k-k Filter}{equation.4.2.1}{}}
\newlabel{eq:Ch-Theory-TotalWavenumber}{{4-2}{28}{3D f-k-k Filter}{equation.4.2.2}{}}
\newlabel{fig:Ch-Theory-FK-f_slice-data}{{4-4a}{29}{\relax }{figure.caption.45}{}}
\newlabel{sub@fig:Ch-Theory-FK-f_slice-data}{{a}{29}{\relax }{figure.caption.45}{}}
\newlabel{fig:Ch-Theory-FK-f_slice-mask}{{4-4b}{29}{\relax }{figure.caption.45}{}}
\newlabel{sub@fig:Ch-Theory-FK-f_slice-mask}{{b}{29}{\relax }{figure.caption.45}{}}
\newlabel{fig:Ch-Theory-FK-f_slice-data3d}{{4-4c}{29}{\relax }{figure.caption.45}{}}
\newlabel{sub@fig:Ch-Theory-FK-f_slice-data3d}{{c}{29}{\relax }{figure.caption.45}{}}
\newlabel{fig:Ch-Theory-FK-delphi-data}{{4-4d}{29}{\relax }{figure.caption.45}{}}
\newlabel{sub@fig:Ch-Theory-FK-delphi-data}{{d}{29}{\relax }{figure.caption.45}{}}
\newlabel{fig:Ch-Theory-FK-delphi-mask}{{4-4e}{29}{\relax }{figure.caption.45}{}}
\newlabel{sub@fig:Ch-Theory-FK-delphi-mask}{{e}{29}{\relax }{figure.caption.45}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4-4}{\ignorespaces Illustration of the 3D $f$-$k_x$-$k_y$-filter. (a) is a \SI {40}{\hertz } frequency slice of the $f$-$k_x$-$k_y$ spectrum of the data in Figure \ref  {fig:Ch-Theory-DataSorting}. $k_x$ and $k_y$ refer to the crossline and inline wavenumber respectively. (b) is a \SI {40}{\hertz } frequency slice of the $f$-$k_x$-$k_y$ mask, where the white area equals 1 and the black area is 0. (c) shows the \SI {40}{\hertz } frequency slice of (a) sorted in a 3D cube. The red cone represents the edge of the 3D $f$-$k_x$-$k_y$ filter mask. (d) and (e) display the $f$-$k_x$-$k_y$ data spectrum and mask sorted according to section \ref  {sec:Ch-Theory-3dExtension-DataSorting}, i.e. each sub-cone refers to one inline wavenumber. Note that due to the sorting the wavenumber axis is a mix of crossline and inline wavenumbers. For this reason the wavenumber axis has no labels.\relax }}{29}{figure.caption.45}}
\newlabel{fig:Ch-Theory-FKK-Mask}{{4-4}{29}{Illustration of the 3D $f$-$k_x$-$k_y$-filter. (a) is a \SI {40}{\hertz } frequency slice of the $f$-$k_x$-$k_y$ spectrum of the data in Figure \ref {fig:Ch-Theory-DataSorting}. $k_x$ and $k_y$ refer to the crossline and inline wavenumber respectively. (b) is a \SI {40}{\hertz } frequency slice of the $f$-$k_x$-$k_y$ mask, where the white area equals 1 and the black area is 0. (c) shows the \SI {40}{\hertz } frequency slice of (a) sorted in a 3D cube. The red cone represents the edge of the 3D $f$-$k_x$-$k_y$ filter mask. (d) and (e) display the $f$-$k_x$-$k_y$ data spectrum and mask sorted according to section \ref {sec:Ch-Theory-3dExtension-DataSorting}, i.e. each sub-cone refers to one inline wavenumber. Note that due to the sorting the wavenumber axis is a mix of crossline and inline wavenumbers. For this reason the wavenumber axis has no labels.\relax }{figure.caption.45}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4-3}Results}{29}{section.4.3}}
\newlabel{fig:Ch-Mahdad3d-2dfk-slice}{{4-5a}{30}{\relax }{figure.caption.46}{}}
\newlabel{sub@fig:Ch-Mahdad3d-2dfk-slice}{{a}{30}{\relax }{figure.caption.46}{}}
\newlabel{fig:Ch-Mahdad3d-2dfk-Delphi}{{4-5b}{30}{\relax }{figure.caption.46}{}}
\newlabel{sub@fig:Ch-Mahdad3d-2dfk-Delphi}{{b}{30}{\relax }{figure.caption.46}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4-5}{\ignorespaces 2D $f$-$k_x$-filter for 3D data. (a) shows a \SI {40}{\hertz } frequency slice of the $f$-$k_x$-$k_y$ spectrum, where the white area equals 1 and the black area is 0. Note that the filter is not affecting the inline wavenumbers $k_y$. (b) illustrates the 2D $f$-$k_x$-filter sorted according to section \ref  {sec:Ch-Theory-3dExtension-DataSorting}. Each cone represents a 2D $f$-$k$-filter for a single inline wavenumber.\relax }}{30}{figure.caption.46}}
\newlabel{fig:Ch-Mahdad3d-2dfk}{{4-5}{30}{2D $f$-$k_x$-filter for 3D data. (a) shows a \SI {40}{\hertz } frequency slice of the $f$-$k_x$-$k_y$ spectrum, where the white area equals 1 and the black area is 0. Note that the filter is not affecting the inline wavenumbers $k_y$. (b) illustrates the 2D $f$-$k_x$-filter sorted according to section \ref {sec:Ch-Theory-3dExtension-DataSorting}. Each cone represents a 2D $f$-$k$-filter for a single inline wavenumber.\relax }{figure.caption.46}{}}
\newlabel{fig:Ch-Mahdad3d-Unbl-Delphi}{{4-6a}{31}{Unblended synthetic data. These data show a 3D common receiver gather in 2D view, which is generated by 21 crossline shots and 51 inline shots. The shown section is a zoom on the strongest events.\relax }{figure.caption.47}{}}
\newlabel{sub@fig:Ch-Mahdad3d-Unbl-Delphi}{{a}{31}{Unblended synthetic data. These data show a 3D common receiver gather in 2D view, which is generated by 21 crossline shots and 51 inline shots. The shown section is a zoom on the strongest events.\relax }{figure.caption.47}{}}
\newlabel{fig:Ch-Mahdad3d-Deblending-Pseudo-Zoom}{{4-6b}{31}{Pseudo-deblended data. The data are blended in a mixed incoherency fashion with 3 experiments per crossline.\relax }{figure.caption.47}{}}
\newlabel{sub@fig:Ch-Mahdad3d-Deblending-Pseudo-Zoom}{{b}{31}{Pseudo-deblended data. The data are blended in a mixed incoherency fashion with 3 experiments per crossline.\relax }{figure.caption.47}{}}
\newlabel{fig:Ch-Mahdad3d-Deblending-2dfk}{{4-6c}{31}{Deblending result with a 2D $f$-$k_x$ filter\relax }{figure.caption.47}{}}
\newlabel{sub@fig:Ch-Mahdad3d-Deblending-2dfk}{{c}{31}{Deblending result with a 2D $f$-$k_x$ filter\relax }{figure.caption.47}{}}
\newlabel{fig:Ch-Mahdad3d-Deblending-3dfk}{{4-6d}{31}{Deblending result with a 3D $f$-$k_x$-$k_y$ filter\relax }{figure.caption.47}{}}
\newlabel{sub@fig:Ch-Mahdad3d-Deblending-3dfk}{{d}{31}{Deblending result with a 3D $f$-$k_x$-$k_y$ filter\relax }{figure.caption.47}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4-6}{\ignorespaces The crossline sources of the synthetic data in Figure \ref  {fig:Ch-Results-Unbl-Delphi} are blended. Then, the 3D deblending algorithm is applied. In case (a) the algorithm uses a 2D $f$-$k_x$ filter. In case (b) it uses a 3D $f$-$k_x$-$k_y$ filter.\relax }}{31}{figure.caption.47}}
\newlabel{fig:Ch-Mahdad3d-Deblending-2dvs3d-fk}{{4-6}{31}{The crossline sources of the synthetic data in Figure \ref {fig:Ch-Results-Unbl-Delphi} are blended. Then, the 3D deblending algorithm is applied. In case (a) the algorithm uses a 2D $f$-$k_x$ filter. In case (b) it uses a 3D $f$-$k_x$-$k_y$ filter.\relax }{figure.caption.47}{}}
\newlabel{fig:Ch-Mahdad3d-Unbl-Delphi-tslice}{{4-7a}{32}{Unblended synthetic data\relax }{figure.caption.48}{}}
\newlabel{sub@fig:Ch-Mahdad3d-Unbl-Delphi-tslice}{{a}{32}{Unblended synthetic data\relax }{figure.caption.48}{}}
\newlabel{fig:Ch-Mahdad3d-Deblending-Pseudo-Zoom-tslice}{{4-7b}{32}{Pseudo-deblended data\relax }{figure.caption.48}{}}
\newlabel{sub@fig:Ch-Mahdad3d-Deblending-Pseudo-Zoom-tslice}{{b}{32}{Pseudo-deblended data\relax }{figure.caption.48}{}}
\newlabel{fig:Ch-Mahdad3d-Deblending-2dfk-tslice}{{4-7c}{32}{Deblended data with a 2D $f$-$k_x$ filter\relax }{figure.caption.48}{}}
\newlabel{sub@fig:Ch-Mahdad3d-Deblending-2dfk-tslice}{{c}{32}{Deblended data with a 2D $f$-$k_x$ filter\relax }{figure.caption.48}{}}
\newlabel{fig:Ch-Mahdad3d-Deblending-3dfk-tslice}{{4-7d}{32}{Deblended data with a 3D $f$-$k_x$-$k_y$ filter\relax }{figure.caption.48}{}}
\newlabel{sub@fig:Ch-Mahdad3d-Deblending-3dfk-tslice}{{d}{32}{Deblended data with a 3D $f$-$k_x$-$k_y$ filter\relax }{figure.caption.48}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4-7}{\ignorespaces \relax }}{32}{figure.caption.48}}
\newlabel{fig:Ch-Mahdad3d-Deblending-2dvs3d-fk-tslice}{{4-7}{32}{\relax }{figure.caption.48}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4-8}{\ignorespaces Comparison of the deblending quality with a 2D $f$-$k_x$ filter and a 3D $f$-$k_x$-$k_y$ filter. The data in Figure \ref  {fig:Ch-Mahdad3d-Unbl-Delphi} are blended with varying maximum firing time delay. Then the blended data are deblended using a 2D $f$-$k_x$ filter and a 3D $f$-$k_x$-$k_y$ filter.\relax }}{32}{figure.caption.49}}
\newlabel{fig:Ch-Mahdad3d-2dvs3dfk}{{4-8}{32}{Comparison of the deblending quality with a 2D $f$-$k_x$ filter and a 3D $f$-$k_x$-$k_y$ filter. The data in Figure \ref {fig:Ch-Mahdad3d-Unbl-Delphi} are blended with varying maximum firing time delay. Then the blended data are deblended using a 2D $f$-$k_x$ filter and a 3D $f$-$k_x$-$k_y$ filter.\relax }{figure.caption.49}{}}
\@setckpt{Chapters/chapter6-3dExtension}{
\setcounter{page}{33}
\setcounter{equation}{2}
\setcounter{enumi}{0}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{1}
\setcounter{chapter}{4}
\setcounter{section}{3}
\setcounter{subsection}{0}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{Anecdote}{1}
\setcounter{anecdote}{0}
\setcounter{figure}{8}
\setcounter{table}{0}
\setcounter{r@tfl@t}{0}
\setcounter{changebargrey}{75}
\setcounter{ContinuedFloat}{0}
\setcounter{SC@C}{0}
\setcounter{parentequation}{0}
\setcounter{lstnumber}{1}
\setcounter{example}{0}
\setcounter{Item}{0}
\setcounter{Hfootnote}{0}
\setcounter{Hy@AnnotLevel}{0}
\setcounter{bookmark@seq@number}{26}
\setcounter{subfigure}{0}
\setcounter{subtable}{0}
\setcounter{NAT@ctr}{0}
\setcounter{@todonotes@numberoftodonotes}{6}
\setcounter{lstlisting}{0}
\setcounter{section@level}{1}
}
